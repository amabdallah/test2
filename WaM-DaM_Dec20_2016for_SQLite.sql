-- This is a Data Definition Language (DDL) script that
-- generates a blank schema of the Water Management Data Model (WaM-DaM)
-- for SQLite database

-- Generated by Adel Abdallah December 20,2016 based on WaM-DaM XML design named WaMDaMDec20_2016.xml generated by DbWrench V4.0 @ http://www.dbwrench.com
-- WaM-DaM All rights reserved. See Licence @ https://github.com/amabdallah/WaM-DaM 

--Use the SQLite Manager Add-on to Mozilla Firefox
--Create a new empty database. Click on the Execute SQL button and delete the text "SELECT * FROM tablename"
--Simply copy all this script and paste into this Execute SQL window
--Then click Run SQL. The script should run successfully and create the 42 empty tables of WaM-DaM

--------------------------------------------------------------------------------------------------
/***************************************************************************/
/******************************* CREATE CVS ********************************/
/***************************************************************************/

CREATE TABLE AggregationStatistic (
	AggregationStatisticCVID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	AggregationStatisticCV VARCHAR (255)  NOT NULL,
	Definition TEXT   NULL
);

CREATE TABLE AttributeCategoryCV (
	AttributeCategoryCVID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	AttributeCategoryNameCV VARCHAR (255)  NOT NULL,
	CategoryDefinition TEXT   NULL
);

CREATE TABLE AttributesCV (
	AttributeCVID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	AttributeNameCV VARCHAR (255)  NOT NULL,
	AttributeDefinition TEXT   NULL,
	AttributeCategoryCVID INTEGER   NULL,
	FOREIGN KEY (AttributeCategoryCVID) REFERENCES AttributeCategoryCV (AttributeCategoryCVID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE AttributeTypes (
	AttributeTypeCVID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	AttributeTypeCV VARCHAR (255)  NOT NULL,
	Definition TEXT   NULL
);

CREATE TABLE BinaryValueMeaning (
	BinaryValueMeaningID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	ObjectAttributeCodeBinary VARCHAR (255)  NOT NULL,
	BinaryValue BINARY (1)  NOT NULL,
	BinaryValueMeaningCV TEXT   NOT NULL
);

CREATE TABLE FileFormat (
	FileFormatCVID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	FileFormatCV VARCHAR (255)  NOT NULL,
	Definition TEXT   NULL
);

CREATE TABLE InstanceName (
	InstanceNameCVID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	InstanceNameCV VARCHAR (255)  NOT NULL,
	Definition TEXT   NULL
);

CREATE TABLE MethodType (
	MethodTypeCVID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	MethodTypeCV VARCHAR (255)  NOT NULL,
	Definition TEXT   NULL
);

CREATE TABLE ObjectCategoryCV (
	ObjectCategoryCVID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	ObjectCategoryNameCV VARCHAR (255)  NOT NULL,
	CategoryDefinition TEXT   NULL
);

CREATE TABLE ObjectTypesCV (
	ObjectTypeCVID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	ObjectTypeCV VARCHAR (255)  NOT NULL,
	ObjectTopologyCV VARCHAR (50)  NOT NULL,
	ObjectDefinition TEXT   NULL,
	ObjectCategoryCVID INTEGER   NULL,
	FOREIGN KEY (ObjectCategoryCVID) REFERENCES ObjectCategoryCV (ObjectCategoryCVID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE SeasonName (
	SeasonNameCVID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	SeasonNameCV VARCHAR (255)  NOT NULL,
	Definition TEXT   NULL
);

CREATE TABLE SpatialReference (
	SpatialReferenceID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	SRSNameCV VARCHAR (500)  NOT NULL,
	SRSID INTEGER   NOT NULL,
	IsGeographic INTEGER   NOT NULL,
	Notes TEXT   NULL
);

CREATE TABLE TextControlledValues (
	TextControlledValueCVID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	TextControlledValueCV VARCHAR (255)  NOT NULL,
	TextControlledAttribute VARCHAR (255)  NOT NULL,
	ValueDefinition TEXT   NULL
);

CREATE TABLE Units (
	UnitCVID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	UnitType VARCHAR (255)  NOT NULL,
	UnitNameCV VARCHAR (255)  NOT NULL,
	UnitSystem VARCHAR (255)  NULL,
	UnitAbbreviation char (50)  NOT NULL
);

CREATE TABLE VerticalDatum (
	VerticalDatumCVID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	VerticalDatumCV VARCHAR (255)  NOT NULL,
	Definition TEXT   NULL
);

/***************************************************************************/
/**************************** CREATE DATAVALUES ****************************/
/***************************************************************************/

CREATE TABLE Binarys (
	BinaryID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	BinaryValue BINARY (1)  NOT NULL,
	BinaryValueMeaningCVID INTEGER   NOT NULL,
	DataValuesMapperID INTEGER   NOT NULL,
	FOREIGN KEY (BinaryValueMeaningCVID) REFERENCES BinaryValueMeaning (BinaryValueMeaningID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (DataValuesMapperID) REFERENCES DataValuesMapper (DataValuesMapperID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE DataValuesMapper (
	DataValuesMapperID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY
);

CREATE TABLE FileBased (
	FileBasedID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	FileName VARCHAR (255)  NOT NULL,
	FileLocationOnDesk VARCHAR (255)  NOT NULL,
	FileFormatCVID INTEGER   NOT NULL,
	Description TEXT   NULL,
	DataValuesMapperID INTEGER   NOT NULL,
	FOREIGN KEY (DataValuesMapperID) REFERENCES DataValuesMapper (DataValuesMapperID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (FileFormatCVID) REFERENCES FileFormat (FileFormatCVID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE MultiColumnArrays (
	MultiColumnID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	ColumnNameID INTEGER   NOT NULL,
	DataValuesMapperID INTEGER   NOT NULL,
	FOREIGN KEY (ColumnNameID) REFERENCES DataValuesMapper (DataValuesMapperID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (DataValuesMapperID) REFERENCES DataValuesMapper (DataValuesMapperID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE MultiColumnValues (
	MultiColumnValueID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	Value VARCHAR (255)  NOT NULL,
	ValueOrder INTEGER   NOT NULL,
	MultiColumnID INTEGER   NOT NULL,
	FOREIGN KEY (MultiColumnID) REFERENCES MultiColumnArrays (MultiColumnID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE Parameters (
	ParameterID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	ParameterValue FLOAT   NOT NULL,
	DataValuesMapperID INTEGER   NOT NULL,
	FOREIGN KEY (DataValuesMapperID) REFERENCES DataValuesMapper (DataValuesMapperID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE SeasonalParameters (
	SeasonalParameterID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	SeasonStartDateTime VARCHAR (50)  NULL,
	SeasonEndDateTime VARCHAR (50)  NULL,
	SeasonValue VARCHAR (500)  NOT NULL,
	SeasonNameCVID INTEGER   NOT NULL,
	DataValuesMapperID INTEGER   NOT NULL,
	FOREIGN KEY (DataValuesMapperID) REFERENCES DataValuesMapper (DataValuesMapperID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (SeasonNameCVID) REFERENCES SeasonName (SeasonNameCVID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE TextControlled (
	TextControlledID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	TextControlledValueCVID INTEGER   NOT NULL,
	DataValuesMapperID INTEGER   NOT NULL,
	FOREIGN KEY (TextControlledValueCVID) REFERENCES TextControlledValues (TextControlledValueCVID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (DataValuesMapperID) REFERENCES DataValuesMapper (DataValuesMapperID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE TextFree (
	TextFreeID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	TextFreeValue VARCHAR (500)  NOT NULL,
	DataValuesMapperID INTEGER   NOT NULL,
	FOREIGN KEY (DataValuesMapperID) REFERENCES DataValuesMapper (DataValuesMapperID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE TimeSeries (
	TimeSeriesID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	AggregationStatistiCVID INTEGER   NOT NULL,
	AggregationInterval DOUBLE   NOT NULL,
	IntervalTimeUnitCVID INTEGER   NOT NULL,
	BeginDateTime DATETIME   NULL,
	EndDateTime DATETIME   NULL,
	IsRegular BIT   NULL,
	NoDataValue VARCHAR (50)  NULL,
	Description TEXT   NULL,
	DataValuesMapperID INTEGER   NOT NULL,
	FOREIGN KEY (AggregationStatistiCVID) REFERENCES AggregationStatistic (AggregationStatisticCVID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (DataValuesMapperID) REFERENCES DataValuesMapper (DataValuesMapperID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (IntervalTimeUnitCVID) REFERENCES Units (UnitCVID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE TimeSeriesValues (
	TimeSeriesValueID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	TimeSeriesID INTEGER   NOT NULL,
	DateTimeStamp DATETIME   NOT NULL,
	Value FLOAT   NOT NULL,
	FOREIGN KEY (TimeSeriesID) REFERENCES TimeSeries (TimeSeriesID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

/***************************************************************************/
/***************************** CREATE METADATA *****************************/
/***************************************************************************/

CREATE TABLE Methods (
	MethodID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	MethodName VARCHAR (255)  NOT NULL,
	MethodWebpage VARCHAR (255)  NULL,
	MethodCitation VARCHAR (500)  NULL,
	MethodTypeCVID INTEGER   NOT NULL,
	PersonID INTEGER   NOT NULL,
	Description TEXT   NULL,
	FOREIGN KEY (MethodTypeCVID) REFERENCES MethodType (MethodTypeCVID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (PersonID) REFERENCES People (PersonID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE Organizations (
	OrganizationID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	OrganizationName VARCHAR (255)  NOT NULL,
	OrganizationType VARCHAR (255)  NULL,
	OrganizationWebpage VARCHAR (255)  NULL,
	Description TEXT   NULL
);

CREATE TABLE People (
	PersonID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	PersonName VARCHAR (255)  NOT NULL,
	Address VARCHAR (255)  NULL,
	Email VARCHAR (255)  NULL,
	Phone VARCHAR (50)  NULL,
	PersonWebpage VARCHAR (255)  NULL,
	Position VARCHAR (255)  NULL,
	OrganizationID INTEGER   NOT NULL,
	FOREIGN KEY (OrganizationID) REFERENCES Organizations (OrganizationID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE Sources (
	SourceID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	SourceName VARCHAR (500)  NOT NULL,
	SourceWebpage VARCHAR (500)  NULL,
	SourceCitation VARCHAR (500)  NULL,
	PersonID INTEGER   NOT NULL,
	Description TEXT   NULL,
	FOREIGN KEY (PersonID) REFERENCES People (PersonID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

/***************************************************************************/
/***************************** CREATE NETWORKS *****************************/
/***************************************************************************/

CREATE TABLE Connections (
	ConnectivityID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	LinkInstanceID INTEGER   NOT NULL,
	StartNodeInstanceID INTEGER   NOT NULL,
	EndNodeInstanceID INTEGER   NOT NULL,
	FOREIGN KEY (LinkInstanceID) REFERENCES Instances (InstanceID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (StartNodeInstanceID) REFERENCES Instances (InstanceID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (EndNodeInstanceID) REFERENCES Instances (InstanceID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE Instances (
	InstanceID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	InstanceName VARCHAR (255)  NOT NULL,
	InstanceCode VARCHAR (255)  NOT NULL,
	Longitude_x FLOAT   NULL,
	Latitude_y FLOAT   NULL,
	Description TEXT   NULL,
	InstanceNameCVID INTEGER   NULL,
	FOREIGN KEY (InstanceNameCVID) REFERENCES InstanceName (InstanceNameCVID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE Mapping (
	MappingID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	ObjectAttributeID INTEGER   NOT NULL,
	InstanceID INTEGER   NOT NULL,
	SourceID INTEGER   NOT NULL,
	MethodID INTEGER   NOT NULL,
	DataValuesMapperID INTEGER   NULL,
	FOREIGN KEY (DataValuesMapperID) REFERENCES DataValuesMapper (DataValuesMapperID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (InstanceID) REFERENCES Instances (InstanceID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (MethodID) REFERENCES Methods (MethodID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (ObjectAttributeID) REFERENCES ObjectAttributes (ObjectAttributeID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (SourceID) REFERENCES Sources (SourceID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE MasterNetworks (
	MasterNetworkID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	MasterNetworkName VARCHAR (255)  NOT NULL,
	SpatialReferenceCVID INTEGER   NULL,
	VerticalDatumCVID INTEGER   NULL,
	Description TEXT   NULL,
	FOREIGN KEY (SpatialReferenceCVID) REFERENCES SpatialReference (SpatialReferenceID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (VerticalDatumCVID) REFERENCES VerticalDatum (VerticalDatumCVID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE ScenarioMapping (
	ScenarioMappingID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	ScenarioID INTEGER   NOT NULL,
	MappingID INTEGER   NOT NULL,
	FOREIGN KEY (MappingID) REFERENCES Mapping (MappingID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (ScenarioID) REFERENCES Scenarios (ScenarioID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE Scenarios (
	ScenarioID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	ScenarioName VARCHAR (255)  NOT NULL,
	ScenarioStartTime DATETIME   NULL,
	ScenarioEndTime DATETIME   NULL,
	TimeStep INTEGER   NULL,
	TimeStepUnitCVID INTEGER   NULL,
	MasterNetworkID INTEGER   NOT NULL,
	Description TEXT   NULL,
	FOREIGN KEY (MasterNetworkID) REFERENCES MasterNetworks (MasterNetworkID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (TimeStepUnitCVID) REFERENCES Units (UnitCVID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

/***************************************************************************/
/**************************** CREATE STRUCTURES ****************************/
/***************************************************************************/

CREATE TABLE AttributeCategory (
	AttributeCategoryID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	AttributeCategoryName VARCHAR (255)  NOT NULL,
	CategoryDefinition TEXT   NULL
);

CREATE TABLE Attributes (
	AttributeID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	AttributeName VARCHAR (255)  NOT NULL,
	AttributeCode VARCHAR (50)  NOT NULL,
	UnitCVID INTEGER   NOT NULL,
	AttributeNameCVID INTEGER   NULL,
	AttributeCategoryID INTEGER   NULL,
	AttributeDescription TEXT   NULL,
	FOREIGN KEY (AttributeCategoryID) REFERENCES AttributeCategory (AttributeCategoryID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (AttributeNameCVID) REFERENCES AttributesCV (AttributeCVID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (UnitCVID) REFERENCES Units (UnitCVID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE DataStructures (
	DataStructureID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	DataStructureName VARCHAR (255)  NOT NULL,
	DataStrucutureAcronym  VARCHAR (255)  NOT NULL,
	DataStructureWebpage VARCHAR (255)  NULL,
	Description TEXT   NULL
);

CREATE TABLE ObjectAttributes (
	ObjectAttributeID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	ObjectTypeID INTEGER   NOT NULL,
	AttributeID INTEGER   NOT NULL,
	ObjectAttributeCode VARCHAR (255)  NOT NULL,
	ModelInputOrOutput char (50)  NULL,
	AttributeTypeCVID INTEGER   NOT NULL,
	FOREIGN KEY (AttributeID) REFERENCES Attributes (AttributeID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (AttributeTypeCVID) REFERENCES AttributeTypes (AttributeTypeCVID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (ObjectTypeID) REFERENCES ObjectTypes (ObjectTypeID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE ObjectCategory (
	ObjectCategoryID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	ObjectCategoryName VARCHAR (255)  NOT NULL,
	CategoryDefinition TEXT   NULL
);

CREATE TABLE ObjectTypes (
	ObjectTypeID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	ObjectType VARCHAR (255)  NOT NULL,
	ObjectCode INTEGER   NOT NULL,
	ObjectTopologyCV VARCHAR (50)  NOT NULL,
	MapColor VARCHAR (50)  NULL,
	MapSymbol VARCHAR (50)  NULL,
	Description TEXT   NULL,
	ObjectTypeCVID INTEGER   NULL,
	ObjectCategoryID INTEGER   NULL,
	DataStructureID INTEGER   NOT NULL,
	FOREIGN KEY (DataStructureID) REFERENCES DataStructures (DataStructureID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (ObjectCategoryID) REFERENCES ObjectCategory (ObjectCategoryID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (ObjectTypeCVID) REFERENCES ObjectTypesCV (ObjectTypeCVID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);
