-- This is a Data Definition Language (DDL) script that
-- generates a blank schema of the Water Management Data Model (WaM-DaM)
-- for SQLite database

-- Generated by Adel Abdallah February 7, 2017 based on WaM-DaM XML design named WaMDaMFeb7_2017.xml generated by DbWrench V4.0 @ http://www.dbwrench.com
-- WaM-DaM All rights reserved. See Licence @ https://github.com/amabdallah/WaM-DaM 

--Use the SQLite Manager Add-on to Mozilla Firefox
--Create a new empty database. Click on the Execute SQL button and delete the text "SELECT * FROM tablename"
--Simply copy all this script and paste into this Execute SQL window
--Then click Run SQL. The script should run successfully and create the 41 empty tables of WaM-DaM

--------------------------------------------------------------------------------------------------
/***************************************************************************/
/******************************* CREATE CVS ********************************/
/***************************************************************************/

CREATE TABLE CV_AggregationStatistic (
	AggregationStatisticCV VARCHAR (255)  NOT NULL PRIMARY KEY,
	AggregationStatisticCVTerm VARCHAR (255)  NOT NULL,
	Definition TEXT   NULL
);

CREATE TABLE CV_AttributeDataType (
	AttributeDataTypeCV VARCHAR (255)  NOT NULL PRIMARY KEY,
	AttributeDataTypeCVTerm VARCHAR (255)  NOT NULL,
	Definition TEXT   NULL
);

CREATE TABLE CV_AttributeName (
	AttributeNameCV VARCHAR (255)  NOT NULL PRIMARY KEY,
	AttributeNameCVTerm VARCHAR (255)  NOT NULL,
	AttributeCategory INTEGER   NULL,
	AttributeDefinition TEXT   NULL
);

CREATE TABLE CV_BooleanValueMeaning (
	BooleanValueMeaningCV VARCHAR (255)  NOT NULL PRIMARY KEY,
	BooleanValueMeaningTerm VARCHAR (255)  NOT NULL,
	BooleanValue	 BINARY (1)  NOT NULL
);

CREATE TABLE CV_FileFormat (
	FileFormatCV VARCHAR (255)  NOT NULL PRIMARY KEY,
	FileFormatCVTerm VARCHAR (255)  NOT NULL,
	Definition TEXT   NULL
);

CREATE TABLE CV_InstanceName (
	InstanceNameCV VARCHAR (255)  NOT NULL PRIMARY KEY,
	InstanceNameCVTerm VARCHAR (255)  NOT NULL,
	Definition TEXT   NULL
);

CREATE TABLE CV_MethodType (
	MethodTypeCV VARCHAR (255)  NOT NULL PRIMARY KEY,
	MethodTypeCVTerm VARCHAR (255)  NOT NULL,
	Definition TEXT   NULL
);

CREATE TABLE CV_ObjectTopology (
	ObjectTopologyCV VARCHAR (50)  NOT NULL PRIMARY KEY,
	ObjectTopologyCVTerm	 VARCHAR (50)  NOT NULL,
	Definition TEXT   NULL
);

CREATE TABLE CV_ObjectTypes (
	ObjectTypeCV VARCHAR (255)  NOT NULL PRIMARY KEY,
	ObjectTypeCVTerm VARCHAR (255)  NOT NULL,
	ObjectTopologyCV VARCHAR (50)  NOT NULL,
	ObjectDefinition TEXT   NULL,
	ObjectCategory VARCHAR (255)  NULL
);

CREATE TABLE CV_SeasonName (
	SeasonNameCV VARCHAR (255)  NOT NULL PRIMARY KEY,
	SeasonNameCVTerm VARCHAR (255)  NOT NULL,
	Definition TEXT   NULL
);

CREATE TABLE CV_SpatialReference (
	SpatialReferenceNameCV VARCHAR (255)  NOT NULL PRIMARY KEY,
	SpatialReferenceNameCVTerm VARCHAR (500)  NOT NULL,
	SRSDescription INTEGER   NULL,
	SRSWebpage TEXT   NULL
);

CREATE TABLE CV_TextControlledValue (
	TextControlledValueCV VARCHAR (255)  NOT NULL PRIMARY KEY,
	TextControlledValueCVTerm VARCHAR (255)  NOT NULL,
	TextControlledAttribute VARCHAR (255)  NOT NULL,
	ValueDefinition TEXT   NULL
);

CREATE TABLE CV_Units (
	UnitNameCV VARCHAR (255)  NOT NULL PRIMARY KEY,
	UnitNameCVTerm VARCHAR (255)  NOT NULL,
	UnitType VARCHAR (255)  NOT NULL,
	UnitSystem VARCHAR (255)  NULL,
	UnitAbbreviation char (50)  NOT NULL
);

CREATE TABLE CV_VerticalDatum (
	VerticalDatumCV VARCHAR (255)  NOT NULL PRIMARY KEY,
	VerticalDatumCVTerm VARCHAR (255)  NOT NULL,
	Definition TEXT   NULL
);

/***************************************************************************/
/************************* CREATE DATASETSTRUCTURE *************************/
/***************************************************************************/

CREATE TABLE AttributeCategory (
	AttributeCategoryID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	AttributeCategoryName VARCHAR (255)  NOT NULL,
	CategoryDefinition TEXT   NULL
);

CREATE TABLE Attributes (
	AttributeID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	AttributeName VARCHAR (255)  NOT NULL,
	AttributeNameCV VARCHAR (255)  NULL,
	ObjectTypeID INTEGER   NOT NULL,
	UnitNameCV VARCHAR (255)  NULL,
	AttributeDataTypeCV VARCHAR (255)  NOT NULL,
	AttributeCategoryID INTEGER   NULL,
	ModelInputOrOutput char (50)  NULL,
	AttributeDescription TEXT   NULL,
	FOREIGN KEY (AttributeNameCV) REFERENCES CV_AttributeName (AttributeNameCV)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (AttributeDataTypeCV) REFERENCES CV_AttributeDataType (AttributeDataTypeCV)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (UnitNameCV) REFERENCES CV_Units (UnitNameCV)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (AttributeCategoryID) REFERENCES AttributeCategory (AttributeCategoryID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (ObjectTypeID) REFERENCES ObjectTypes (ObjectTypeID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE Datasets (
	DatasetID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	DatasetName VARCHAR (255)  NOT NULL,
	DatasetAcronym  VARCHAR (255)  NOT NULL,
	SourceID INTEGER   NOT NULL,
	Description TEXT   NULL,
	FOREIGN KEY (SourceID) REFERENCES Sources (SourceID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE ObjectCategory (
	ObjectCategoryID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	ObjectCategoryName VARCHAR (255)  NOT NULL,
	CategoryDefinition TEXT   NULL
);

CREATE TABLE ObjectTypes (
	ObjectTypeID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	ObjectType VARCHAR (255)  NOT NULL,
	ObjectTypeCV VARCHAR (255)  NULL,
	ObjectTopologyCV VARCHAR (50)  NOT NULL,
	MapColor VARCHAR (50)  NULL,
	MapSymbol VARCHAR (50)  NULL,
	Description TEXT   NULL,
	ObjectCategoryID INTEGER   NULL,
	DatasetID INTEGER   NOT NULL,
	FOREIGN KEY (ObjectTopologyCV) REFERENCES CV_ObjectTopology (ObjectTopologyCV)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (ObjectTypeCV) REFERENCES CV_ObjectTypes (ObjectTypeCV)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (DatasetID) REFERENCES Datasets (DatasetID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (ObjectCategoryID) REFERENCES ObjectCategory (ObjectCategoryID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

/***************************************************************************/
/**************************** CREATE DATAVALUES ****************************/
/***************************************************************************/

CREATE TABLE BooleanValues (
	BooleanValueID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	BooleanValueMeaningCV VARCHAR (255)  NOT NULL,
	DataValuesMapperID INTEGER   NOT NULL,
	FOREIGN KEY (DataValuesMapperID) REFERENCES DataValuesMapper (DataValuesMapperID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (BooleanValueMeaningCV) REFERENCES CV_BooleanValueMeaning (BooleanValueMeaningCV)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE DataValuesMapper (
	DataValuesMapperID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY
);

CREATE TABLE Files (
	FileID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	FileName VARCHAR (255)  NOT NULL,
	File BLOB   NOT NULL,
	FileFormatCV VARCHAR (255)  NOT NULL,
	Description TEXT   NULL,
	DataValuesMapperID INTEGER   NOT NULL,
	FOREIGN KEY (DataValuesMapperID) REFERENCES DataValuesMapper (DataValuesMapperID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (FileFormatCV) REFERENCES CV_FileFormat (FileFormatCV)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE MultiColumnArrays (
	MultiColumnID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	ColumnNameID INTEGER   NOT NULL,
	DataValuesMapperID INTEGER   NOT NULL,
	FOREIGN KEY (ColumnNameID) REFERENCES DataValuesMapper (DataValuesMapperID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (DataValuesMapperID) REFERENCES DataValuesMapper (DataValuesMapperID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE MultiColumnValues (
	MultiColumnValueID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	Value VARCHAR (255)  NOT NULL,
	ValueOrder INTEGER   NOT NULL,
	MultiColumnID INTEGER   NOT NULL,
	FOREIGN KEY (MultiColumnID) REFERENCES MultiColumnArrays (MultiColumnID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE Parameters (
	ParameterID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	ParameterValue FLOAT   NOT NULL,
	DataValuesMapperID INTEGER   NOT NULL,
	FOREIGN KEY (DataValuesMapperID) REFERENCES DataValuesMapper (DataValuesMapperID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE SeasonalParameters (
	SeasonalParameterID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	SeasonName	 VARCHAR (255)  NULL,
	SeasonNameCV VARCHAR (255)  NOT NULL,
	SeasonValue VARCHAR (500)  NOT NULL,
	DataValuesMapperID INTEGER   NOT NULL,
	FOREIGN KEY (SeasonNameCV) REFERENCES CV_SeasonName (SeasonNameCV)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (DataValuesMapperID) REFERENCES DataValuesMapper (DataValuesMapperID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE TextControlled (
	TextControlledID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	TextControlledValueCV VARCHAR (255)  NOT NULL,
	DataValuesMapperID INTEGER   NOT NULL,
	FOREIGN KEY (TextControlledValueCV) REFERENCES CV_TextControlledValue (TextControlledValueCV)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (DataValuesMapperID) REFERENCES DataValuesMapper (DataValuesMapperID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE TextFree (
	TextFreeID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	TextFreeValue VARCHAR (500)  NOT NULL,
	DataValuesMapperID INTEGER   NOT NULL,
	FOREIGN KEY (DataValuesMapperID) REFERENCES DataValuesMapper (DataValuesMapperID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE TimeSeries (
	TimeSeriesID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	WaterOrCalendarYear VARCHAR (50)  NOT NULL,
	AggregationStatistiCV VARCHAR (255)  NOT NULL,
	AggregationInterval DOUBLE   NOT NULL,
	IntervalTimeUnitCV VARCHAR (255)  NOT NULL,
	BeginDateTime DATETIME   NULL,
	EndDateTime DATETIME   NULL,
	IsRegular BIT   NULL,
	NoDataValue VARCHAR (50)  NULL,
	Description TEXT   NULL,
	DataValuesMapperID INTEGER   NOT NULL,
	FOREIGN KEY (AggregationStatistiCV) REFERENCES CV_AggregationStatistic (AggregationStatisticCV)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (IntervalTimeUnitCV) REFERENCES CV_Units (UnitNameCV)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (DataValuesMapperID) REFERENCES DataValuesMapper (DataValuesMapperID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE TimeSeriesValues (
	TimeSeriesValueID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	TimeSeriesID INTEGER   NOT NULL,
	DateTimeStamp DATETIME   NOT NULL,
	Value FLOAT   NOT NULL,
	FOREIGN KEY (TimeSeriesID) REFERENCES TimeSeries (TimeSeriesID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

/***************************************************************************/
/***************************** CREATE METADATA *****************************/
/***************************************************************************/

CREATE TABLE Methods (
	MethodID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	MethodName VARCHAR (255)  NOT NULL,
	MethodWebpage VARCHAR (255)  NULL,
	MethodCitation VARCHAR (500)  NULL,
	MethodTypeCV VARCHAR (255)  NOT NULL,
	PersonID INTEGER   NOT NULL,
	Description TEXT   NULL,
	FOREIGN KEY (MethodTypeCV) REFERENCES CV_MethodType (MethodTypeCV)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (PersonID) REFERENCES People (PersonID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE Organizations (
	OrganizationID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	OrganizationName VARCHAR (255)  NOT NULL,
	OrganizationType VARCHAR (255)  NULL,
	OrganizationWebpage VARCHAR (255)  NULL,
	Description TEXT   NULL
);

CREATE TABLE People (
	PersonID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	PersonName VARCHAR (255)  NOT NULL,
	Address VARCHAR (255)  NULL,
	Email VARCHAR (255)  NULL,
	Phone VARCHAR (50)  NULL,
	PersonWebpage VARCHAR (255)  NULL,
	Position VARCHAR (255)  NULL,
	OrganizationID INTEGER   NOT NULL,
	FOREIGN KEY (OrganizationID) REFERENCES Organizations (OrganizationID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE Sources (
	SourceID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	SourceName VARCHAR (500)  NOT NULL,
	SourceWebpage VARCHAR (500)  NULL,
	SourceCitation VARCHAR (500)  NULL,
	PersonID INTEGER   NOT NULL,
	Description TEXT   NULL,
	FOREIGN KEY (PersonID) REFERENCES People (PersonID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

/***************************************************************************/
/***************************** CREATE NETWORKS *****************************/
/***************************************************************************/

CREATE TABLE Connections (
	ConnectivityID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	LinkInstanceID INTEGER   NOT NULL,
	StartNodeInstanceID INTEGER   NOT NULL,
	EndNodeInstanceID INTEGER   NOT NULL,
	FOREIGN KEY (LinkInstanceID) REFERENCES Instances (InstanceID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (StartNodeInstanceID) REFERENCES Instances (InstanceID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (EndNodeInstanceID) REFERENCES Instances (InstanceID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE InstanceCategory (
	InstanceCategoryID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	InstanceCategory VARCHAR (255)  NOT NULL,
	CategoryDefinition	 TEXT   NULL
);

CREATE TABLE Instances (
	InstanceID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	InstanceName VARCHAR (255)  NOT NULL,
	InstanceNameCV VARCHAR (255)  NULL,
	Longitude_x FLOAT   NULL,
	Latitude_y FLOAT   NULL,
	Description TEXT   NULL,
	InstanceNameCVID INTEGER   NULL,
	InstanceCategoryID INTEGER   NULL,
	FOREIGN KEY (InstanceNameCV) REFERENCES CV_InstanceName (InstanceNameCV)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (InstanceCategoryID) REFERENCES InstanceCategory (InstanceCategoryID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE Mapping (
	MappingID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	AttributeID INTEGER   NOT NULL,
	InstanceID INTEGER   NOT NULL,
	SourceID INTEGER   NOT NULL,
	MethodID INTEGER   NOT NULL,
	DataValuesMapperID INTEGER   NULL,
	FOREIGN KEY (DataValuesMapperID) REFERENCES DataValuesMapper (DataValuesMapperID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (InstanceID) REFERENCES Instances (InstanceID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (MethodID) REFERENCES Methods (MethodID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (AttributeID) REFERENCES Attributes (AttributeID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (SourceID) REFERENCES Sources (SourceID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE MasterNetworks (
	MasterNetworkID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	MasterNetworkName VARCHAR (255)  NOT NULL,
	SpatialReferenceNameCV VARCHAR (255)  NULL,
	VerticalDatumCV VARCHAR (255)  NULL,
	Description TEXT   NULL,
	FOREIGN KEY (SpatialReferenceNameCV) REFERENCES CV_SpatialReference (SpatialReferenceNameCV)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (VerticalDatumCV) REFERENCES CV_VerticalDatum (VerticalDatumCV)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE ScenarioMapping (
	ScenarioMappingID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	ScenarioID INTEGER   NOT NULL,
	MappingID INTEGER   NOT NULL,
	FOREIGN KEY (MappingID) REFERENCES Mapping (MappingID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (ScenarioID) REFERENCES Scenarios (ScenarioID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE Scenarios (
	ScenarioID INTEGER  AUTO_INCREMENT NOT NULL PRIMARY KEY,
	ScenarioName VARCHAR (255)  NOT NULL,
	ScenarioStartTime DATETIME   NULL,
	ScenarioEndTime DATETIME   NULL,
	TimeStep INTEGER   NULL,
	TimeStepUnitCV VARCHAR (255)  NULL,
	MasterNetworkID INTEGER   NOT NULL,
	Description TEXT   NULL,
	FOREIGN KEY (TimeStepUnitCV) REFERENCES CV_Units (UnitNameCV)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (MasterNetworkID) REFERENCES MasterNetworks (MasterNetworkID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);
