-- This is a Data Definition Language (DDL) script that
-- generates a blank schema of the Water Management Data Model (WaM-DaM)
-- for SQLite database

-- Generated by Adel Abdallah September19,2016 based on WaM-DaM XML design named WaMDaMSep19_2016
-- WaM-DaM All rights reserved. See Licence @ https://github.com/amabdallah/WaM-DaM 

--Use the SQLite Manager Add-on to Mozilla Firefox
--Create a new empty database. Click on the Execute SQL button and delete the text "SELECT * FROM tablename"
--Simply copy all this script and paste into this Execute SQL window
--Then click Run SQL. The script should run successfully and create the 42 empty tables of WaM-DaM
--------------------------------------------------------------------------------------------------
/***************************************************************************/
/******************************* CREATE CORE *******************************/
/***************************************************************************/

CREATE TABLE Attributes (
	AttributeID INTEGER   NOT NULL PRIMARY KEY,
	AttributeName VARCHAR (255)  NOT NULL,
	AttributeCode VARCHAR (50)  NOT NULL,
	UnitID INTEGER   NOT NULL,
	AttributeNameCVID INTEGER   NULL,
	AttributeDescription TEXT   NULL,
	FOREIGN KEY (AttributeNameCVID) REFERENCES AttributesCV (AttributeID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (UnitID) REFERENCES Units (UnitID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE Connections (
	ConnectivityID INTEGER   NOT NULL PRIMARY KEY,
	LinkInstanceID INTEGER   NOT NULL,
	StartNodeInstanceID INTEGER   NOT NULL,
	EndNodeInstanceID INTEGER   NOT NULL,
	FOREIGN KEY (LinkInstanceID) REFERENCES Instances (InstanceID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (StartNodeInstanceID) REFERENCES Instances (InstanceID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (EndNodeInstanceID) REFERENCES Instances (InstanceID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE DataStorage (
	DataStorageID INTEGER   NOT NULL PRIMARY KEY
);

CREATE TABLE DataStructure (
	DataStructureID INTEGER   NOT NULL PRIMARY KEY,
	DataStructureName VARCHAR (255)  NOT NULL,
	DataStrucutureAcronym  VARCHAR (255)  NULL,
	DataStructureDomain VARCHAR (255)  NULL,
	DataStructureWebpage VARCHAR (255)  NULL,
	DataStructureDescription TEXT   NULL
);

CREATE TABLE Instances (
	InstanceID INTEGER   NOT NULL PRIMARY KEY,
	InstanceName VARCHAR (255)  NOT NULL,
	InstanceCode VARCHAR (255)  NULL,
	Longitude FLOAT   NULL,
	Latitude FLOAT   NULL,
	Description TEXT   NULL,
	FOREIGN KEY (InstanceName) REFERENCES InstanceName (Term)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE Mapping (
	MappingID INTEGER   NOT NULL PRIMARY KEY,
	ObjectAttributeID INTEGER   NOT NULL,
	InstanceID INTEGER   NOT NULL,
	SourceID INTEGER   NOT NULL,
	MethodID INTEGER   NOT NULL,
	DataStorageID INTEGER   NULL,
	FOREIGN KEY (DataStorageID) REFERENCES DataStorage (DataStorageID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (InstanceID) REFERENCES Instances (InstanceID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (MethodID) REFERENCES Methods (MethodID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (ObjectAttributeID) REFERENCES ObjectAttributes (ObjectAttributeID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (SourceID) REFERENCES Sources (SourceID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE MasterNetworks (
	MasterNetworkID INTEGER   NOT NULL PRIMARY KEY,
	MasterNetworkName VARCHAR (255)  NOT NULL,
	SpatialReferenceCVID INTEGER   NULL,
	VerticalDatumCV VARCHAR (255)  NULL,
	ParenMasterNetwork INTEGER   NULL,
	Description TEXT   NULL,
	FOREIGN KEY (ParenMasterNetwork) REFERENCES MasterNetworks (MasterNetworkID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (SpatialReferenceCVID) REFERENCES SpatialReference (SpatialReferenceID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (VerticalDatumCV) REFERENCES VerticalDatum (Term)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE ObjectAttributes (
	ObjectAttributeID INTEGER   NOT NULL PRIMARY KEY,
	ObjectTypeID INTEGER   NOT NULL,
	AttributeID INTEGER   NOT NULL,
	ObjectAttributeCode VARCHAR (50)  NULL,
	ModelInputOrOutput char (50)  NULL,
	AttributeTypeCodeCV VARCHAR (50)  NOT NULL,
	AttributeCategoryID INTEGER   NULL,
	FOREIGN KEY (AttributeID) REFERENCES Attributes (AttributeID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (AttributeTypeCodeCV) REFERENCES AttributeTypeCode (Term)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (AttributeCategoryID) REFERENCES ObjectAttributeCategory (AttributeCategoryID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (ObjectTypeID) REFERENCES ObjectTypes (ObjectTypeID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE ObjectTypes (
	ObjectTypeID INTEGER   NOT NULL PRIMARY KEY,
	ObjectType VARCHAR (255)  NOT NULL,
	ObjectCode VARCHAR (50)  NULL,
	ObjectTopology VARCHAR (50)  NOT NULL,
	MapColor VARCHAR (50)  NULL,
	MapSymbol VARCHAR (50)  NULL,
	Description TEXT   NULL,
	ObjectTypeCVID INTEGER   NULL,
	ObjectCategoryID INTEGER   NULL,
	DataStructureID INTEGER   NOT NULL,
	FOREIGN KEY (ObjectTypeCVID) REFERENCES ObjectTypesCV (ObjectTypeID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (DataStructureID) REFERENCES DataStructure (DataStructureID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (ObjectCategoryID) REFERENCES ObjectCategory (ObjectCategoryID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE ScenarioMapping (
	ScenarioMappingID INTEGER   NOT NULL PRIMARY KEY,
	ScenarioID INTEGER   NOT NULL,
	MappingID INTEGER   NOT NULL,
	FOREIGN KEY (MappingID) REFERENCES Mapping (MappingID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (ScenarioID) REFERENCES Scenarios (ScenarioID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE Scenarios (
	ScenarioID INTEGER   NOT NULL PRIMARY KEY,
	ScenarioName VARCHAR (255)  NOT NULL,
	StartTime DATETIME   NULL,
	EndTime DATETIME   NULL,
	TimeStep INTEGER   NULL,
	TimeStepUnitID INTEGER   NULL,
	Description TEXT   NULL,
	MasterNetworkID INTEGER   NOT NULL,
	FOREIGN KEY (MasterNetworkID) REFERENCES MasterNetworks (MasterNetworkID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (TimeStepUnitID) REFERENCES Units (UnitID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

/***************************************************************************/
/******************************* CREATE CVS ********************************/
/***************************************************************************/

CREATE TABLE AggregationStatistic (
	Term VARCHAR (255)  NOT NULL PRIMARY KEY,
	Definition TEXT   NULL
);

CREATE TABLE AttributeCategoryCV (
	AttributeCategoryID INTEGER   NOT NULL PRIMARY KEY,
	AttributeCategoryName VARCHAR (255)  NOT NULL,
	CategoryDefinition TEXT   NULL,
	ParentAttributeCategoryID INTEGER   NULL,
	FOREIGN KEY (ParentAttributeCategoryID) REFERENCES AttributeCategoryCV (AttributeCategoryID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE AttributesCV (
	AttributeID INTEGER   NOT NULL PRIMARY KEY,
	AttributeName VARCHAR (255)  NOT NULL,
	AttributeDefinition TEXT   NULL,
	AttributeCategoryID INTEGER   NULL,
	FOREIGN KEY (AttributeCategoryID) REFERENCES AttributeCategoryCV (AttributeCategoryID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE AttributeTypeCode (
	Term VARCHAR (255)  NOT NULL PRIMARY KEY,
	Definition TEXT   NULL
);

CREATE TABLE BinaryValueMeaning (
	BinaryValueMeaningID INTEGER   NOT NULL PRIMARY KEY,
	BinaryAttribute VARCHAR (255)  NOT NULL,
	BinaryValue BINARY (1)  NOT NULL,
	ValueDefinition TEXT   NOT NULL
);

CREATE TABLE FileFormat (
	Term VARCHAR (255)  NOT NULL PRIMARY KEY,
	Definition TEXT   NULL
);

CREATE TABLE InstanceName (
	Term VARCHAR (255)  NOT NULL PRIMARY KEY,
	Definition TEXT   NULL
);

CREATE TABLE MethodType (
	Term VARCHAR (255)  NOT NULL PRIMARY KEY,
	Definition TEXT   NULL
);

CREATE TABLE ObjectCategoryCV (
	ObjectCategoryID INTEGER   NOT NULL PRIMARY KEY,
	ObjectCategoryName VARCHAR (255)  NOT NULL,
	CategoryDefinition TEXT   NULL,
	ParentObjectCategoryID INTEGER   NULL,
	FOREIGN KEY (ParentObjectCategoryID) REFERENCES ObjectCategoryCV (ObjectCategoryID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE ObjectTypesCV (
	ObjectTypeID INTEGER   NOT NULL PRIMARY KEY,
	ObjectType VARCHAR (255)  NOT NULL,
	ObjectTopology VARCHAR (50)  NULL,
	ObjectDefinition TEXT   NULL,
	ObjectCategoryID INTEGER   NULL,
	FOREIGN KEY (ObjectCategoryID) REFERENCES ObjectCategoryCV (ObjectCategoryID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE SeasonName (
	Term VARCHAR (255)  NOT NULL PRIMARY KEY,
	Definition TEXT   NULL
);

CREATE TABLE SpatialReference (
	SpatialReferenceID INTEGER   NOT NULL PRIMARY KEY,
	SRSName VARCHAR (500)  NOT NULL,
	SRSID INTEGER   NOT NULL,
	IsGeographic INTEGER   NOT NULL,
	Notes TEXT   NULL
);

CREATE TABLE TextControlledValues (
	TextControlledValueID INTEGER   NOT NULL PRIMARY KEY,
	TextControlledValue VARCHAR (255)  NOT NULL,
	TextControlledAttribute VARCHAR (255)  NOT NULL,
	ValueDefinition TEXT   NULL
);

CREATE TABLE Units (
	UnitID INTEGER   NOT NULL PRIMARY KEY,
	UnitType VARCHAR (255)  NOT NULL,
	UnitName VARCHAR (255)  NOT NULL,
	UnitSystem VARCHAR (255)  NULL,
	UnitAbbreviation char (50)  NOT NULL
);

CREATE TABLE VerticalDatum (
	Term VARCHAR (255)  NOT NULL PRIMARY KEY,
	Definition TEXT   NULL
);

/***************************************************************************/
/***************************** CREATE METADATA *****************************/
/***************************************************************************/

CREATE TABLE Methods (
	MethodID INTEGER   NOT NULL PRIMARY KEY,
	MethodName VARCHAR (255)  NOT NULL,
	MethodCode VARCHAR (50)  NOT NULL,
	Webpage VARCHAR (255)  NULL,
	Description TEXT   NULL,
	MethodTypeCV VARCHAR (255)  NOT NULL,
	PersonID INTEGER   NOT NULL,
	FOREIGN KEY (MethodTypeCV) REFERENCES MethodType (Term)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (PersonID) REFERENCES People (PersonID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE ObjectAttributeCategory (
	AttributeCategoryID INTEGER   NOT NULL PRIMARY KEY,
	CategoryName VARCHAR (255)  NOT NULL,
	CategoryDefinition TEXT   NULL,
	CategoryGroup VARCHAR (255)  NULL,
	ParentCategoryID INTEGER   NULL,
	FOREIGN KEY (ParentCategoryID) REFERENCES ObjectAttributeCategory (AttributeCategoryID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE ObjectCategory (
	ObjectCategoryID INTEGER   NOT NULL PRIMARY KEY,
	CategoryName VARCHAR (255)  NOT NULL,
	CategoryDefinition TEXT   NULL,
	ObjectGroup VARCHAR (500)  NULL,
	ParentCategoryID INTEGER   NULL,
	FOREIGN KEY (ParentCategoryID) REFERENCES ObjectCategory (ObjectCategoryID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE Organizations (
	OrganizationID INTEGER   NOT NULL PRIMARY KEY,
	OrganizationName VARCHAR (255)  NOT NULL,
	OrganizationType VARCHAR (255)  NULL,
	Webpage VARCHAR (255)  NULL,
	Description TEXT   NULL
);

CREATE TABLE People (
	PersonID INTEGER   NOT NULL PRIMARY KEY,
	ContactName VARCHAR (255)  NOT NULL,
	Address VARCHAR (255)  NULL,
	Email VARCHAR (255)  NULL,
	Phone VARCHAR (50)  NULL,
	Webpage VARCHAR (255)  NULL,
	Position VARCHAR (255)  NULL,
	OrganizationID INTEGER   NOT NULL,
	FOREIGN KEY (OrganizationID) REFERENCES Organizations (OrganizationID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE Sources (
	SourceID INTEGER   NOT NULL PRIMARY KEY,
	SourceName VARCHAR (500)  NOT NULL,
	SourceCode VARCHAR (50)  NOT NULL,
	Webpage VARCHAR (500)  NULL,
	Citation VARCHAR (500)  NULL,
	Description TEXT   NULL,
	PersonID INTEGER   NULL,
	FOREIGN KEY (PersonID) REFERENCES People (PersonID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

/***************************************************************************/
/***************************** CREATE STORAGE ******************************/
/***************************************************************************/

CREATE TABLE Binarys (
	BinaryID INTEGER   NOT NULL PRIMARY KEY,
	BinaryValue BINARY (1)  NOT NULL,
	DataStorageID INTEGER   NOT NULL,
	BinaryValueMeaningCVID INTEGER   NOT NULL,
	FOREIGN KEY (BinaryValueMeaningCVID) REFERENCES BinaryValueMeaning (BinaryValueMeaningID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (DataStorageID) REFERENCES DataStorage (DataStorageID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE FileBased (
	FileBasedID INTEGER   NOT NULL PRIMARY KEY,
	FileName VARCHAR (255)  NOT NULL,
	FileFormate VARCHAR (255)  NOT NULL,
	FileLocationOnDesk VARCHAR (255)  NOT NULL,
	Description TEXT   NULL,
	DataStorageID INTEGER   NOT NULL,
	FOREIGN KEY (DataStorageID) REFERENCES DataStorage (DataStorageID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (FileFormate) REFERENCES FileFormat (Term)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE MultiColumnArray (
	MultiColumnID INTEGER   NOT NULL PRIMARY KEY,
	ColumnNameID INTEGER   NOT NULL,
	DataStorageID INTEGER   NOT NULL,
	FOREIGN KEY (DataStorageID) REFERENCES DataStorage (DataStorageID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (ColumnNameID) REFERENCES DataStorage (DataStorageID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE MultiColumnValues (
	MultiColumnValueID INTEGER   NOT NULL PRIMARY KEY,
	Value VARCHAR (255)  NOT NULL,
	ValueOrder INTEGER   NOT NULL,
	MultiColumnID INTEGER   NOT NULL,
	FOREIGN KEY (MultiColumnID) REFERENCES MultiColumnArray (MultiColumnID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE Parameters (
	ParameterID INTEGER   NOT NULL PRIMARY KEY,
	ParameterValue FLOAT   NOT NULL,
	DataStorageID INTEGER   NOT NULL,
	FOREIGN KEY (DataStorageID) REFERENCES DataStorage (DataStorageID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE SeasonalParameters (
	SeasonalParameterID INTEGER   NOT NULL PRIMARY KEY,
	SeasonStartDateTime VARCHAR (50)  NULL,
	SeasonEndDateTime VARCHAR (50)  NULL,
	SeasonNameCV VARCHAR (255)  NOT NULL,
	SeasonValue VARCHAR (500)  NOT NULL,
	DataStorageID INTEGER   NOT NULL,
	FOREIGN KEY (DataStorageID) REFERENCES DataStorage (DataStorageID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (SeasonNameCV) REFERENCES SeasonName (Term)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE TextControlled (
	TextControlledID INTEGER   NOT NULL PRIMARY KEY,
	TextControlledValueCVID INTEGER   NOT NULL,
	DataStorageID INTEGER   NOT NULL,
	FOREIGN KEY (TextControlledValueCVID) REFERENCES TextControlledValues (TextControlledValueID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (DataStorageID) REFERENCES DataStorage (DataStorageID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE TextFree (
	TextFreeID INTEGER   NOT NULL PRIMARY KEY,
	TextFreeValue VARCHAR (500)  NOT NULL,
	DataStorageID INTEGER   NOT NULL,
	FOREIGN KEY (DataStorageID) REFERENCES DataStorage (DataStorageID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE TimeSeries (
	TimeSeriesID INTEGER   NOT NULL PRIMARY KEY,
	AggregationStatisticCV VARCHAR (255)  NOT NULL,
	AggregationInterval DOUBLE   NOT NULL,
	IntervalTimeUnitID INTEGER   NOT NULL,
	BeginDateTime DATETIME   NULL,
	EndDateTime DATETIME   NULL,
	IsRegular BIT   NULL,
	NoDataValue VARCHAR (50)  NULL,
	Description TEXT   NULL,
	DataStorageID INTEGER   NOT NULL,
	FOREIGN KEY (AggregationStatisticCV) REFERENCES AggregationStatistic (Term)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (DataStorageID) REFERENCES DataStorage (DataStorageID)
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	FOREIGN KEY (IntervalTimeUnitID) REFERENCES Units (UnitID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE TimeSeriesValues (
	TimeSeriesValueID INTEGER   NOT NULL PRIMARY KEY,
	TimeSeriesID INTEGER   NOT NULL,
	DateTimeStamp DATETIME   NOT NULL,
	Value FLOAT   NOT NULL,
	FOREIGN KEY (TimeSeriesID) REFERENCES TimeSeries (TimeSeriesID)
	ON UPDATE NO ACTION ON DELETE NO ACTION
);
